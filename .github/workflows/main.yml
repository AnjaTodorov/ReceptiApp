name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
        
      - name: Build Backend
        run: mvn -f backend/pom.xml clean package

  build-frontend:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Dependencies
        run: npm install
        working-directory: frontend
        
      - name: Build Frontend
        run: npm run build
        working-directory: frontend

  test-backend:
    runs-on: ubuntu-latest
    needs: build-frontend
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ReceptiDB
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
          --name mysql
          -p 3306:3306
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run Backend Tests
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/ReceptiDB
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: |
          mvn -f backend/pom.xml clean test
